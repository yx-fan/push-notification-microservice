# Stage 1: Build the application using a full Node.js image
FROM node:20 as builder

# Set the working directory
WORKDIR /app

# Copy the package.json and package-lock.json files to the working directory
COPY package*.json ./

# Install the dependencies
RUN npm install

# Copy the rest of the application code to the working directory
COPY . .

# Build the application
RUN npm run build

# Stage 2: Create a smaller image for runtime using a slim Node.js image
FROM node:20-slim

# Set the working directory
WORKDIR /app

# Copy the built application and necessary files from the builder stage
COPY --from=builder /app/dist /app/dist
COPY --from=builder /app/package*.json /app/

# Install only production dependencies
RUN npm install --production

# Install Go and grpcui in the slim image
RUN apt-get update && apt-get install -y golang-go ca-certificates
RUN go install github.com/fullstorydev/grpcui/cmd/grpcui@latest

# Add Go to the PATH
ENV PATH=$PATH:/root/go/bin

# Expose the ports the app runs on
# eg. 3010 for the app, 50052 for gRPC server, 51732 for grpcui
EXPOSE 0000
EXPOSE 00000
EXPOSE 00000

# Serve the app and delay the start of grpcui to ensure gRPC server is up
CMD ["sh", "-c", "npm start & sleep 5 && grpcui -plaintext -port 00000 -bind 0.0.0.0 localhost:00000"]